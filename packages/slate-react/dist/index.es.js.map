{"version":3,"file":"index.es.js","sources":["../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/components/string.tsx","../src/utils/weak-maps.ts","../src/components/leaf.tsx","../src/utils/environment.ts","../src/hooks/use-isomorphic-layout-effect.ts","../src/utils/range-list.ts","../src/hooks/use-content-key.ts","../src/components/text.tsx","../src/components/element.tsx","../src/hooks/use-slate-static.tsx","../src/hooks/use-decorate.ts","../src/hooks/use-selected.ts","../src/hooks/use-children.tsx","../src/utils/hotkeys.ts","../src/hooks/use-read-only.ts","../src/hooks/use-slate.tsx","../src/utils/dom.ts","../src/components/editable.tsx","../src/utils/key.ts","../src/plugin/react-editor.ts","../src/components/android/diff-text.ts","../src/components/android/mutation-detection.ts","../src/components/android/android-input-manager.ts","../src/components/android/use-mutation-observer.ts","../src/components/android/use-restore-dom.tsx","../src/components/android/use-track-user-input.ts","../src/components/android/use-android-input-manager.ts","../src/components/android/android-editable.tsx","../src/hooks/use-focused.ts","../src/components/slate.tsx","../src/hooks/use-editor.tsx","../src/utils/lines.ts","../src/plugin/with-react.ts","../src/index.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React, { useRef } from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n\n  const ref = useRef<HTMLSpanElement>(null)\n  const forceUpdateCount = useRef(0)\n\n  if (ref.current && ref.current.textContent !== text) {\n    forceUpdateCount.current += 1\n  }\n\n  // This component may have skipped rendering due to native operations being\n  // applied. If an undo is performed React will see the old and new shadow DOM\n  // match and not apply an update. Forces each render to actually reconcile.\n  return (\n    <span data-slate-string ref={ref} key={forceUpdateCount.current}>\n      {text}\n      {isTrailing ? '\\n' : null}\n    </span>\n  )\n}\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nconst ZeroWidthString = (props: { length?: number; isLineBreak?: boolean }) => {\n  const { length = 0, isLineBreak = false } = props\n  return (\n    <span\n      data-slate-zero-width={isLineBreak ? 'n' : 'z'}\n      data-slate-length={length}\n    >\n      {'\\uFEFF'}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n","import { Ancestor, Editor, Node } from 'slate'\nimport { Key } from './key'\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\n\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\nexport const EDITOR_TO_WINDOW: WeakMap<Editor, Window> = new WeakMap()\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\nexport const EDITOR_TO_KEY_TO_ELEMENT: WeakMap<\n  Editor,\n  WeakMap<Key, HTMLElement>\n> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_DRAGGING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_CLICKING: WeakMap<Editor, boolean> = new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<Editor, () => void>()\n\nexport const NODE_TO_RESTORE_DOM = new WeakMap<Node, () => void>()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = (Symbol('placeholder') as unknown) as string\n","import React, { useRef, useEffect } from 'react'\nimport { Element, Text } from 'slate'\nimport String from './string'\nimport { PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\n\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  const placeholderRef = useRef<HTMLSpanElement | null>(null)\n\n  useEffect(() => {\n    const placeholderEl = placeholderRef?.current\n    const editorEl = document.querySelector<HTMLDivElement>(\n      '[data-slate-editor=\"true\"]'\n    )\n\n    if (!placeholderEl || !editorEl) {\n      return\n    }\n\n    editorEl.style.minHeight = `${placeholderEl.clientHeight}px`\n\n    return () => {\n      editorEl.style.minHeight = 'auto'\n    }\n  }, [placeholderRef, leaf])\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  if (leaf[PLACEHOLDER_SYMBOL]) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n        },\n        contentEditable: false,\n        ref: placeholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {renderPlaceholder(placeholderProps)}\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n","export const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_ANDROID =\n  typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_SAFARI =\n  typeof navigator !== 'undefined' &&\n  /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\n// \"modern\" Edge was released at 79.x\nexport const IS_EDGE_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])/i.test(navigator.userAgent)\n\nexport const IS_CHROME =\n  typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent)\n\n// Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\nexport const IS_CHROME_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])/i.test(navigator.userAgent)\n\n// Firefox did not support `beforeInput` until `v87`.\nexport const IS_FIREFOX_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])).*/i.test(\n    navigator.userAgent\n  )\n\n// qq browser\nexport const IS_QQBROWSER =\n  typeof navigator !== 'undefined' && /.*QQBrowser/.test(navigator.userAgent)\n\n// UC mobile browser\nexport const IS_UC_MOBILE =\n  typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent)\n\n// Wechat browser\nexport const IS_WECHATBROWSER =\n  typeof navigator !== 'undefined' && /.*Wechat/.test(navigator.userAgent)\n// dpj ios app\nexport const IS_HYPERCLASS_IOS =\n  typeof navigator !== 'undefined' && /HyperClass-ios/.test(navigator.userAgent)\n// dpj android app\nexport const IS_HYPERCLASS_ANDROID =\n  typeof navigator !== 'undefined' && /HyperClass-android/.test(navigator.userAgent)\n\n// Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const CAN_USE_DOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nexport const HAS_BEFORE_INPUT_SUPPORT =\n  !IS_CHROME_LEGACY &&\n  !IS_EDGE_LEGACY &&\n  // globalThis is undefined in older browsers\n  typeof globalThis !== 'undefined' &&\n  globalThis.InputEvent &&\n  // @ts-ignore The `getTargetRanges` property isn't recognized.\n  typeof globalThis.InputEvent.prototype.getTargetRanges === 'function'\n","import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from '../utils/environment'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n","import { Range } from 'slate'\nimport { PLACEHOLDER_SYMBOL } from './weak-maps'\n\nexport const shallowCompare = (obj1: {}, obj2: {}) =>\n  Object.keys(obj1).length === Object.keys(obj2).length &&\n  Object.keys(obj1).every(\n    key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]\n  )\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isDecoratorRangeListEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    const { anchor: rangeAnchor, focus: rangeFocus, ...rangeOwnProps } = range\n    const { anchor: otherAnchor, focus: otherFocus, ...otherOwnProps } = other\n\n    if (\n      !Range.equals(range, other) ||\n      range[PLACEHOLDER_SYMBOL] !== other[PLACEHOLDER_SYMBOL] ||\n      !shallowCompare(rangeOwnProps, otherOwnProps)\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n","import { useEffect, useRef, useState } from 'react'\nimport { Node as SlateNode } from 'slate'\nimport { NODE_TO_RESTORE_DOM } from '../utils/weak-maps'\n\nexport function useContentKey(node: SlateNode) {\n  const contentKeyRef = useRef<number>(0)\n  const updateAnimationFrameRef = useRef<number | null>(null)\n\n  const [, setForceRerenderCounter] = useState(0)\n\n  useEffect(() => {\n    NODE_TO_RESTORE_DOM.set(node, () => {\n      // Update is already queued and node hasn't re-render yet\n      if (updateAnimationFrameRef.current) {\n        return\n      }\n\n      updateAnimationFrameRef.current = requestAnimationFrame(() => {\n        setForceRerenderCounter(state => state + 1)\n        updateAnimationFrameRef.current = null\n      })\n\n      contentKeyRef.current++\n    })\n\n    return () => {\n      NODE_TO_RESTORE_DOM.delete(node)\n    }\n  }, [node])\n\n  // Node was restored => clear scheduled update\n  if (updateAnimationFrameRef.current) {\n    cancelAnimationFrame(updateAnimationFrameRef.current)\n    updateAnimationFrameRef.current = null\n  }\n\n  return contentKeyRef.current\n}\n","import React, { useRef } from 'react'\nimport { Range, Element, Text as SlateText } from 'slate'\n\nimport Leaf from './leaf'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  EDITOR_TO_KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { isDecoratorRangeListEqual } from '../utils/range-list'\nimport { useContentKey } from '../hooks/use-content-key'\nimport { IS_ANDROID } from '../utils/environment'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: Range[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const {\n    decorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    text,\n  } = props\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    if (ref.current) {\n      KEY_TO_ELEMENT?.set(key, ref.current)\n      NODE_TO_ELEMENT.set(text, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, text)\n    } else {\n      KEY_TO_ELEMENT?.delete(key)\n      NODE_TO_ELEMENT.delete(text)\n    }\n  })\n\n  const contentKey = IS_ANDROID ? useContentKey(text) : undefined\n\n  return (\n    <span data-slate-node=\"text\" ref={ref} key={contentKey}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.text === prev.text &&\n    isDecoratorRangeListEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport default MemoizedText\n","import React, { Fragment, useRef } from 'react'\nimport getDirection from 'direction'\nimport { Editor, Node, Range, Element as SlateElement } from 'slate'\n\nimport Text from './text'\nimport useChildren from '../hooks/use-children'\nimport { ReactEditor, useSlateStatic, useReadOnly } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_PARENT,\n  NODE_TO_INDEX,\n  EDITOR_TO_KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { isDecoratorRangeListEqual } from '../utils/range-list'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from './editable'\nimport { useContentKey } from '../hooks/use-content-key'\nimport { IS_ANDROID } from '../utils/environment'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: Range[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const ref = useRef<HTMLElement>(null)\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = readOnly ? null : (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    if (ref.current) {\n      KEY_TO_ELEMENT?.set(key, ref.current)\n      NODE_TO_ELEMENT.set(element, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, element)\n    } else {\n      KEY_TO_ELEMENT?.delete(key)\n      NODE_TO_ELEMENT.delete(element)\n    }\n  })\n\n  const content = renderElement({ attributes, children, element })\n\n  if (IS_ANDROID) {\n    const contentKey = useContentKey(element)\n    return <Fragment key={contentKey}>{content}</Fragment>\n  }\n\n  return content\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    isDecoratorRangeListEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n","import { createContext, useContext } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { Editor } from 'slate'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import { createContext, useContext } from 'react'\nimport { Range, NodeEntry } from 'slate'\n\n/**\n * A React context for sharing the `decorate` prop of the editable.\n */\n\nexport const DecorateContext = createContext<(entry: NodeEntry) => Range[]>(\n  () => []\n)\n\n/**\n * Get the current `decorate` prop of the editable.\n */\n\nexport const useDecorate = (): ((entry: NodeEntry) => Range[]) => {\n  return useContext(DecorateContext)\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n","import React from 'react'\nimport { Editor, Range, Element, Ancestor, Descendant } from 'slate'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '..'\nimport { useSlateStatic } from './use-slate-static'\nimport { useDecorate } from './use-decorate'\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from '../components/editable'\nimport { SelectedContext } from './use-selected'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: Range[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const decorate = useDecorate()\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n    const ds = decorate([n, p])\n\n    for (const dec of decorations) {\n      const d = Range.intersection(dec, range)\n\n      if (d) {\n        ds.push(d)\n      }\n    }\n\n    if (Element.isElement(n)) {\n      children.push(\n        <SelectedContext.Provider key={`provider-${key.id}`} value={!!sel}>\n          <ElementComponent\n            decorations={ds}\n            element={n}\n            key={key.id}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={sel}\n          />\n        </SelectedContext.Provider>\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderPlaceholder={renderPlaceholder}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return children\n}\n\nexport default useChildren\n","import { isKeyHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  splitBlock: 'shift?+enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[key]\n  const apple = APPLE_HOTKEYS[key]\n  const windows = WINDOWS_HOTKEYS[key]\n  const isGeneric = generic && isKeyHotkey(generic)\n  const isApple = apple && isKeyHotkey(apple)\n  const isWindows = windows && isKeyHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n","import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport const SlateContext = createContext<[ReactEditor] | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = (): Editor => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  const [editor] = context\n  return editor\n}\n","/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\n\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\ndeclare global {\n  interface Window {\n    Selection: typeof Selection['constructor']\n    DataTransfer: typeof DataTransfer['constructor']\n    Node: typeof Node['constructor']\n  }\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Returns the host window of a DOM node\n */\n\nexport const getDefaultView = (value: any): Window | null => {\n  return (\n    (value && value.ownerDocument && value.ownerDocument.defaultView) || null\n  )\n}\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  const window = getDefaultView(value)\n  return !!window && value instanceof window.Node\n}\n\n/**\n * Check if a value is a DOM selection.\n */\n\nexport const isDOMSelection = (value: any): value is DOMSelection => {\n  const window = value && value.anchorNode && getDefaultView(value.anchorNode)\n  return !!window && value instanceof window.Selection\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\n\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\n  return (\n    event.clipboardData &&\n    event.clipboardData.getData('text/plain') !== '' &&\n    event.clipboardData.types.length === 1\n  )\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    let isLast = offset === node.childNodes.length\n    let index = isLast ? offset - 1 : offset\n    ;[node, index] = getEditableChildAndIndex(\n      node,\n      index,\n      isLast ? 'backward' : 'forward'\n    )\n    // If the editable child found is in front of input offset, we instead seek to its end\n    isLast = index < offset\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward')\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Determines wether the active element is nested within a shadowRoot\n */\n\nexport const hasShadowRoot = () => {\n  return !!(\n    window.document.activeElement && window.document.activeElement.shadowRoot\n  )\n}\n\n/**\n * Get the nearest editable child and index at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChildAndIndex = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): [DOMNode, number] => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    index = i\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return [child, index]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const [child] = getEditableChildAndIndex(parent, index, direction)\n  return child\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\n\nexport const getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n\n/**\n * Get x-slate-fragment attribute from data-slate-fragment\n */\nconst catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m\nexport const getSlateFragmentAttribute = (\n  dataTransfer: DataTransfer\n): string | void => {\n  const htmlData = dataTransfer.getData('text/html')\n  const [, fragment] = htmlData.match(catchSlateFragment) || []\n  return fragment\n}\n\n/**\n * Get the x-slate-fragment attribute that exist in text/html data\n * and append it to the DataTransfer object\n */\nexport const getClipboardData = (dataTransfer: DataTransfer): DataTransfer => {\n  if (!dataTransfer.getData('application/x-slate-fragment')) {\n    const fragment = getSlateFragmentAttribute(dataTransfer)\n    if (fragment) {\n      const clipboardData = new DataTransfer()\n      dataTransfer.types.forEach(type => {\n        clipboardData.setData(type, dataTransfer.getData(type))\n      })\n      clipboardData.setData('application/x-slate-fragment', fragment)\n      return clipboardData\n    }\n  }\n  return dataTransfer\n}\n","import React, { useEffect, useRef, useMemo, useCallback, useState } from 'react'\nimport {\n  Editor,\n  Element,\n  NodeEntry,\n  Node,\n  Range,\n  Text,\n  Transforms,\n  Path,\n} from 'slate'\nimport getDirection from 'direction'\nimport debounce from 'lodash/debounce'\nimport throttle from 'lodash/throttle'\nimport scrollIntoView from 'scroll-into-view-if-needed'\n\nimport useChildren from '../hooks/use-children'\nimport Hotkeys from '../utils/hotkeys'\nimport {\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_IOS,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_QQBROWSER,\n  IS_SAFARI,\n  IS_UC_MOBILE,\n  IS_WECHATBROWSER,\n  IS_HYPERCLASS_IOS,\n  IS_HYPERCLASS_ANDROID,\n  CAN_USE_DOM,\n} from '../utils/environment'\nimport { ReactEditor } from '..'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { DecorateContext } from '../hooks/use-decorate'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMRange,\n  getDefaultView,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n} from '../utils/dom'\n\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_READ_ONLY,\n  NODE_TO_ELEMENT,\n  IS_FOCUSED,\n  PLACEHOLDER_SYMBOL,\n  EDITOR_TO_WINDOW,\n} from '../utils/weak-maps'\n\ntype DeferredOperation = () => void\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => Range[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = (props: EditableProps) => {\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = props => <DefaultPlaceholder {...props} />,\n    scrollSelectionIntoView = defaultScrollSelectionIntoView,\n    style = {},\n    as: Component = 'div',\n    ...attributes\n  } = props\n  const editor = useSlate()\n  // Rerender editor when composition status changed\n  const [isComposing, setIsComposing] = useState(false)\n  const ref = useRef<HTMLDivElement>(null)\n  const deferredOperations = useRef<DeferredOperation[]>([])\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isComposing: false,\n      hasInsertPrefixInCompositon: false,\n      isDraggingInternally: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n    }),\n    []\n  )\n\n  // Whenever the editor updates...\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    // Make sure the DOM selection state is in sync.\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (state.isComposing || !domSelection || !ReactEditor.isFocused(editor)) {\n      return\n    }\n\n    const hasDomSelection = domSelection.type !== 'None'\n\n    // If the DOM selection is properly unset, we're done.\n    if (!selection && !hasDomSelection) {\n      return\n    }\n\n    // verify that the dom selection is in the editor\n    const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n    let hasDomSelectionInEditor = false\n    if (\n      editorElement.contains(domSelection.anchorNode) &&\n      editorElement.contains(domSelection.focusNode)\n    ) {\n      hasDomSelectionInEditor = true\n    }\n\n    // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n    if (hasDomSelection && hasDomSelectionInEditor && selection) {\n      const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: true,\n\n        // domSelection is not necessarily a valid Slate range\n        // (e.g. when clicking on contentEditable:false element)\n        suppressThrow: true,\n      })\n      if (slateRange && Range.equals(slateRange, selection)) {\n        return\n      }\n    }\n\n    // when <Editable/> is being controlled through external value\n    // then its children might just change - DOM responds to it on its own\n    // but Slate's value is not being updated through any operation\n    // and thus it doesn't transform selection on its own\n    if (selection && !ReactEditor.hasRange(editor, selection)) {\n      editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: false,\n      })\n      return\n    }\n\n    // Otherwise the DOM selection is out of sync, so update it.\n    state.isUpdatingSelection = true\n\n    const newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n\n    if (newDomRange) {\n      if (Range.isBackward(selection!)) {\n        domSelection.setBaseAndExtent(\n          newDomRange.endContainer,\n          newDomRange.endOffset,\n          newDomRange.startContainer,\n          newDomRange.startOffset\n        )\n      } else {\n        domSelection.setBaseAndExtent(\n          newDomRange.startContainer,\n          newDomRange.startOffset,\n          newDomRange.endContainer,\n          newDomRange.endOffset\n        )\n      }\n      scrollSelectionIntoView(editor, newDomRange)\n    } else {\n      domSelection.removeAllRanges()\n    }\n\n    setTimeout(() => {\n      // COMPAT: In Firefox, it's not enough to create a range, you also need\n      // to focus the contenteditable element too. (2016/11/16)\n      if (newDomRange && IS_FIREFOX) {\n        const el = ReactEditor.toDOMNode(editor, editor)\n        el.focus()\n      }\n\n      state.isUpdatingSelection = false\n    })\n  })\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useCallback(\n    throttle(() => {\n      if (\n        !state.isComposing &&\n        !state.isUpdatingSelection &&\n        !state.isDraggingInternally\n      ) {\n        const root = ReactEditor.findDocumentOrShadowRoot(editor)\n        const { activeElement } = root\n        const el = ReactEditor.toDOMNode(editor, editor)\n        const domSelection = root.getSelection()\n\n        if (activeElement === el) {\n          state.latestElement = activeElement\n          IS_FOCUSED.set(editor, true)\n        } else {\n          IS_FOCUSED.delete(editor)\n        }\n\n        if (!domSelection) {\n          return Transforms.deselect(editor)\n        }\n\n        const { anchorNode, focusNode } = domSelection\n\n        const anchorNodeSelectable =\n          hasEditableTarget(editor, anchorNode) ||\n          isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n        const focusNodeSelectable =\n          hasEditableTarget(editor, focusNode) ||\n          isTargetInsideNonReadonlyVoid(editor, focusNode)\n\n        if (anchorNodeSelectable && focusNodeSelectable) {\n          const range = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: false,\n            suppressThrow: false,\n          })\n          Transforms.select(editor, range)\n        }\n      }\n    }, 100),\n    [readOnly]\n  )\n\n  const scheduleOnDOMSelectionChange = useMemo(\n    () => debounce(onDOMSelectionChange, 0),\n    [onDOMSelectionChange]\n  )\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      if (\n        !readOnly &&\n        hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n        // triggering a `beforeinput` expecting the change to be applied to the immediately before\n        // set selection.\n        scheduleOnDOMSelectionChange.flush()\n\n        const { selection } = editor\n        const { inputType: type } = event\n        const data = (event as any).dataTransfer || event.data || undefined\n\n        // These two types occur while a user is composing text and can't be\n        // cancelled. Let them through and wait for the composition to end.\n        if (\n          type === 'insertCompositionText' ||\n          type === 'deleteCompositionText'\n        ) {\n          return\n        }\n\n        let native = false\n        if (\n          type === 'insertText' &&\n          selection &&\n          Range.isCollapsed(selection) &&\n          // Only use native character insertion for single characters a-z or space for now.\n          // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n          // causes duplicate inserts.\n          event.data &&\n          event.data.length === 1 &&\n          /[a-z ]/i.test(event.data) &&\n          // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n          // When there is an inline element, e.g. a link, and you select\n          // right after it (the start of the next node).\n          selection.anchor.offset !== 0\n        ) {\n          native = true\n\n          // Skip native if there are marks, as\n          // `insertText` will insert a node, not just text.\n          if (editor.marks) {\n            native = false\n          }\n\n          // Chrome also has issues correctly editing the end of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n          // Therefore we don't allow native events to insert text at the end of nodes.\n          const { anchor } = selection\n          const inline = Editor.above(editor, {\n            at: anchor,\n            match: n => Editor.isInline(editor, n),\n            mode: 'highest',\n          })\n          if (inline) {\n            const [, inlinePath] = inline\n\n            if (Editor.isEnd(editor, selection.anchor, inlinePath)) {\n              native = false\n            }\n          }\n        }\n\n        if (!native) {\n          event.preventDefault()\n        }\n\n        // COMPAT: For the deleting forward/backward input types we don't want\n        // to change the selection because it is the range that will be deleted,\n        // and those commands determine that for themselves.\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n          const [targetRange] = (event as any).getTargetRanges()\n\n          if (targetRange) {\n            const range = ReactEditor.toSlateRange(editor, targetRange, {\n              exactMatch: false,\n              suppressThrow: false,\n            })\n\n            if (!selection || !Range.equals(selection, range)) {\n              Transforms.select(editor, range)\n            }\n          }\n        }\n\n        // COMPAT: If the selection is expanded, even if the command seems like\n        // a delete forward/backward command it should delete the selection.\n        if (\n          selection &&\n          Range.isExpanded(selection) &&\n          type.startsWith('delete')\n        ) {\n          const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n          Editor.deleteFragment(editor, { direction })\n          return\n        }\n\n        switch (type) {\n          case 'deleteByComposition':\n          case 'deleteByCut':\n          case 'deleteByDrag': {\n            Editor.deleteFragment(editor)\n            break\n          }\n\n          case 'deleteContent':\n          case 'deleteContentForward': {\n            Editor.deleteForward(editor)\n            break\n          }\n\n          case 'deleteContentBackward': {\n            Editor.deleteBackward(editor)\n            break\n          }\n\n          case 'deleteEntireSoftLine': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineForward': {\n            Editor.deleteForward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineForward': {\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteWordBackward': {\n            Editor.deleteBackward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'deleteWordForward': {\n            Editor.deleteForward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'insertLineBreak':\n          case 'insertParagraph': {\n            Editor.insertBreak(editor)\n            break\n          }\n\n          case 'insertFromComposition':\n          case 'insertFromDrop':\n          case 'insertFromPaste':\n          case 'insertFromYank':\n          case 'insertReplacementText':\n          case 'insertText': {\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              state.isComposing && setIsComposing(false)\n              state.isComposing = false\n            }\n\n            // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n            if (data?.constructor.name === 'DataTransfer') {\n              ReactEditor.insertData(editor, data)\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() =>\n                  Editor.insertText(editor, data)\n                )\n              } else {\n                Editor.insertText(editor, data)\n              }\n            }\n\n            break\n          }\n        }\n      }\n    },\n    [readOnly, propsOnDOMBeforeInput]\n  )\n\n  // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  // https://github.com/facebook/react/issues/11211\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n      // @ts-ignore The `beforeinput` event isn't recognized.\n      ref.current.addEventListener('beforeinput', onDOMBeforeInput)\n    }\n\n    return () => {\n      if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n      }\n    }\n  }, [onDOMBeforeInput])\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n    window.document.addEventListener(\n      'selectionchange',\n      scheduleOnDOMSelectionChange\n    )\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        scheduleOnDOMSelectionChange\n      )\n    }\n  }, [scheduleOnDOMSelectionChange])\n\n  const decorations = decorate([editor, []])\n\n  if (\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === '' &&\n    !isComposing\n  ) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <Component\n          role={readOnly ? undefined : 'textbox'}\n          {...attributes}\n          // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n          // have to use hacks to make these replacement-based features work.\n          // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n          // mismatch warning app moves to browser. Pass-through consumer props when\n          // not CAN_USE_DOM (SSR) and default to falsy value\n          spellCheck={\n            HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n              ? attributes.spellCheck\n              : false\n          }\n          autoCorrect={\n            HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n              ? attributes.autoCorrect\n              : 'false'\n          }\n          autoCapitalize={\n            HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n              ? attributes.autoCapitalize\n              : 'false'\n          }\n          data-slate-editor\n          data-slate-node=\"value\"\n          // explicitly set this\n          contentEditable={!readOnly}\n          // in some cases, a decoration needs access to the range / selection to decorate a text node,\n          // then you will select the whole text node when you select part the of text\n          // this magic zIndex=\"-1\" will fix it\n          zindex={-1}\n          suppressContentEditableWarning\n          ref={ref}\n          style={{\n            // Allow positioning relative to the editable element.\n            position: 'relative',\n            // Prevent the default outline styles.\n            outline: 'none',\n            // Preserve adjacent whitespace and new lines.\n            whiteSpace: 'pre-wrap',\n            // Allow words to break if they are too long.\n            wordWrap: 'break-word',\n            // Allow for passed-in styles to override anything.\n            ...style,\n          }}\n          onBeforeInput={useCallback(\n            (event: React.FormEvent<HTMLDivElement>) => {\n              // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n              // fall back to React's leaky polyfill instead just for it. It\n              // only works for the `insertText` input type.\n              if (\n                !HAS_BEFORE_INPUT_SUPPORT &&\n                !readOnly &&\n                !isEventHandled(event, attributes.onBeforeInput) &&\n                hasEditableTarget(editor, event.target)\n              ) {\n                event.preventDefault()\n                if (!state.isComposing) {\n                  const text = (event as any).data as string\n                  Editor.insertText(editor, text)\n                }\n              }\n            },\n            [readOnly]\n          )}\n          onInput={useCallback((event: React.SyntheticEvent) => {\n            // Flush native operations, as native events will have propogated\n            // and we can correctly compare DOM text values in components\n            // to stop rendering, so that browser functions like autocorrect\n            // and spellcheck work as expected.\n            for (const op of deferredOperations.current) {\n              op()\n            }\n            deferredOperations.current = []\n          }, [])}\n          onBlur={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                readOnly ||\n                state.isUpdatingSelection ||\n                !hasEditableTarget(editor, event.target) ||\n                isEventHandled(event, attributes.onBlur)\n              ) {\n                return\n              }\n\n              // COMPAT: If the current `activeElement` is still the previous\n              // one, this is due to the window being blurred when the tab\n              // itself becomes unfocused, so we want to abort early to allow to\n              // editor to stay focused when the tab becomes focused again.\n              const root = ReactEditor.findDocumentOrShadowRoot(editor)\n              if (state.latestElement === root.activeElement) {\n                return\n              }\n\n              const { relatedTarget } = event\n              const el = ReactEditor.toDOMNode(editor, editor)\n\n              // COMPAT: The event should be ignored if the focus is returning\n              // to the editor from an embedded editable element (eg. an <input>\n              // element inside a void node).\n              if (relatedTarget === el) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving from\n              // the editor to inside a void node's spacer element.\n              if (\n                isDOMElement(relatedTarget) &&\n                relatedTarget.hasAttribute('data-slate-spacer')\n              ) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving to a\n              // non- editable section of an element that isn't a void node (eg.\n              // a list item of the check list example).\n              if (\n                relatedTarget != null &&\n                isDOMNode(relatedTarget) &&\n                ReactEditor.hasDOMNode(editor, relatedTarget)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                if (Element.isElement(node) && !editor.isVoid(node)) {\n                  return\n                }\n              }\n\n              // COMPAT: Safari doesn't always remove the selection even if the content-\n              // editable element no longer has focus. Refer to:\n              // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n              if (IS_SAFARI) {\n                const domSelection = root.getSelection()\n                domSelection?.removeAllRanges()\n              }\n\n              IS_FOCUSED.delete(editor)\n            },\n            [readOnly, attributes.onBlur]\n          )}\n          onClick={useCallback(\n            (event: React.MouseEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onClick) &&\n                isDOMNode(event.target)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, event.target)\n                const path = ReactEditor.findPath(editor, node)\n\n                // At this time, the Slate document may be arbitrarily different,\n                // because onClick handlers can change the document before we get here.\n                // Therefore we must check that this path actually exists,\n                // and that it still refers to the same node.\n                if (Editor.hasPath(editor, path)) {\n                  const lookupNode = Node.get(editor, path)\n                  if (lookupNode === node) {\n                    const start = Editor.start(editor, path)\n                    const end = Editor.end(editor, path)\n\n                    const startVoid = Editor.void(editor, { at: start })\n                    const endVoid = Editor.void(editor, { at: end })\n\n                    if (\n                      startVoid &&\n                      endVoid &&\n                      Path.equals(startVoid[1], endVoid[1])\n                    ) {\n                      const range = Editor.range(editor, start)\n                      Transforms.select(editor, range)\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onClick]\n          )}\n          onCompositionEnd={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionEnd)\n              ) {\n                state.isComposing && setIsComposing(false)\n                state.isComposing = false\n\n                // COMPAT: In Chrome, `beforeinput` events for compositions\n                // aren't correct and never fire the \"insertFromComposition\"\n                // type that we need. So instead, insert whenever a composition\n                // ends since it will already have been committed to the DOM.\n                if (\n                  !IS_SAFARI &&\n                  !IS_FIREFOX_LEGACY &&\n                  !IS_IOS &&\n                  !IS_QQBROWSER &&\n                  !IS_WECHATBROWSER &&\n                  !IS_UC_MOBILE &&\n                  !IS_HYPERCLASS_IOS &&\n                  !IS_HYPERCLASS_ANDROID &&\n                  event.data\n                ) {\n                  Editor.insertText(editor, event.data)\n                }\n\n                if (editor.selection && Range.isCollapsed(editor.selection)) {\n                  const leafPath = editor.selection.anchor.path\n                  const currentTextNode = Node.leaf(editor, leafPath)\n                  if (state.hasInsertPrefixInCompositon) {\n                    state.hasInsertPrefixInCompositon = false\n                    Editor.withoutNormalizing(editor, () => {\n                      // remove Unicode BOM prefix added in `onCompositionStart`\n                      const text = currentTextNode.text.replace(/^\\uFEFF/, '')\n                      Transforms.delete(editor, {\n                        distance: currentTextNode.text.length,\n                        reverse: true,\n                      })\n                      Transforms.insertText(editor, text)\n                    })\n                  }\n                }\n              }\n            },\n            [attributes.onCompositionEnd]\n          )}\n          onCompositionUpdate={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionUpdate)\n              ) {\n                !state.isComposing && setIsComposing(true)\n                state.isComposing = true\n              }\n            },\n            [attributes.onCompositionUpdate]\n          )}\n          onCompositionStart={useCallback(\n            (event: React.CompositionEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCompositionStart)\n              ) {\n                const { selection, marks } = editor\n                if (selection) {\n                  if (Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                    return\n                  }\n                  const inline = Editor.above(editor, {\n                    match: n => Editor.isInline(editor, n),\n                    mode: 'highest',\n                  })\n                  if (inline) {\n                    const [, inlinePath] = inline\n                    if (Editor.isEnd(editor, selection.anchor, inlinePath)) {\n                      const point = Editor.after(editor, inlinePath)!\n                      Transforms.setSelection(editor, {\n                        anchor: point,\n                        focus: point,\n                      })\n                    }\n                  }\n                  // insert new node in advance to ensure composition text will insert\n                  // along with final input text\n                  // add Unicode BOM prefix to avoid normalize removing this node\n                  if (marks) {\n                    state.hasInsertPrefixInCompositon = true\n                    Transforms.insertNodes(\n                      editor,\n                      {\n                        text: '\\uFEFF',\n                        ...marks,\n                      },\n                      {\n                        select: true,\n                      }\n                    )\n                  }\n                }\n              }\n            },\n            [attributes.onCompositionStart]\n          )}\n          onCopy={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCopy)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData, 'copy')\n              }\n            },\n            [attributes.onCopy]\n          )}\n          onCut={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCut)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData, 'cut')\n                const { selection } = editor\n\n                if (selection) {\n                  if (Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    const node = Node.parent(editor, selection.anchor.path)\n                    if (Editor.isVoid(editor, node)) {\n                      Transforms.delete(editor)\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onCut]\n          )}\n          onDragOver={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDragOver)\n              ) {\n                // Only when the target is void, call `preventDefault` to signal\n                // that drops are allowed. Editable content is droppable by\n                // default, and calling `preventDefault` hides the cursor.\n                const node = ReactEditor.toSlateNode(editor, event.target)\n\n                if (Editor.isVoid(editor, node)) {\n                  event.preventDefault()\n                }\n              }\n            },\n            [attributes.onDragOver]\n          )}\n          onDragStart={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDragStart)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, event.target)\n                const path = ReactEditor.findPath(editor, node)\n                const voidMatch =\n                  Editor.isVoid(editor, node) ||\n                  Editor.void(editor, { at: path, voids: true })\n\n                // If starting a drag on a void node, make sure it is selected\n                // so that it shows up in the selection's fragment.\n                if (voidMatch) {\n                  const range = Editor.range(editor, path)\n                  Transforms.select(editor, range)\n                }\n\n                state.isDraggingInternally = true\n\n                ReactEditor.setFragmentData(editor, event.dataTransfer, 'drag')\n              }\n            },\n            [readOnly, attributes.onDragStart]\n          )}\n          onDrop={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDrop)\n              ) {\n                event.preventDefault()\n\n                // Keep a reference to the dragged range before updating selection\n                const draggedRange = editor.selection\n\n                // Find the range where the drop happened\n                const range = ReactEditor.findEventRange(editor, event)\n                const data = event.dataTransfer\n\n                Transforms.select(editor, range)\n\n                if (state.isDraggingInternally) {\n                  if (\n                    draggedRange &&\n                    !Range.equals(draggedRange, range) &&\n                    !Editor.void(editor, { at: range, voids: true })\n                  ) {\n                    Transforms.delete(editor, {\n                      at: draggedRange,\n                    })\n                  }\n\n                  state.isDraggingInternally = false\n                }\n\n                ReactEditor.insertData(editor, data)\n\n                // When dragging from another source into the editor, it's possible\n                // that the current editor does not have focus.\n                if (!ReactEditor.isFocused(editor)) {\n                  ReactEditor.focus(editor)\n                }\n              }\n            },\n            [readOnly, attributes.onDrop]\n          )}\n          onDragEnd={useCallback(\n            (event: React.DragEvent<HTMLDivElement>) => {\n              // When dropping on a different droppable element than the current editor,\n              // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n              // Note: `onDragEnd` is only called when `onDrop` is not called\n              if (\n                !readOnly &&\n                state.isDraggingInternally &&\n                hasTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onDragEnd)\n              ) {\n                state.isDraggingInternally = false\n              }\n            },\n            [readOnly, attributes.onDragEnd]\n          )}\n          onFocus={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                !state.isUpdatingSelection &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onFocus)\n              ) {\n                const el = ReactEditor.toDOMNode(editor, editor)\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                state.latestElement = root.activeElement\n\n                // COMPAT: If the editor has nested editable elements, the focus\n                // can go to them. In Firefox, this must be prevented because it\n                // results in issues with keyboard navigation. (2017/03/30)\n                if (IS_FIREFOX && event.target !== el) {\n                  el.focus()\n                  return\n                }\n\n                IS_FOCUSED.set(editor, true)\n              }\n            },\n            [readOnly, attributes.onFocus]\n          )}\n          onKeyDown={useCallback(\n            (event: React.KeyboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                !state.isComposing &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onKeyDown)\n              ) {\n                const { nativeEvent } = event\n                const { selection } = editor\n\n                const element =\n                  editor.children[\n                    selection !== null ? selection.focus.path[0] : 0\n                  ]\n                const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                // COMPAT: Since we prevent the default behavior on\n                // `beforeinput` events, the browser doesn't think there's ever\n                // any history stack to undo or redo, so we have to manage these\n                // hotkeys ourselves. (2019/11/06)\n                if (Hotkeys.isRedo(nativeEvent)) {\n                  event.preventDefault()\n                  const maybeHistoryEditor: any = editor\n\n                  if (typeof maybeHistoryEditor.redo === 'function') {\n                    maybeHistoryEditor.redo()\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isUndo(nativeEvent)) {\n                  event.preventDefault()\n                  const maybeHistoryEditor: any = editor\n\n                  if (typeof maybeHistoryEditor.undo === 'function') {\n                    maybeHistoryEditor.undo()\n                  }\n\n                  return\n                }\n\n                // COMPAT: Certain browsers don't handle the selection updates\n                // properly. In Chrome, the selection isn't properly extended.\n                // And in Firefox, the selection isn't properly collapsed.\n                // (2017/10/17)\n                if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, { unit: 'line', reverse: true })\n                  return\n                }\n\n                if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, { unit: 'line' })\n                  return\n                }\n\n                if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, {\n                    unit: 'line',\n                    edge: 'focus',\n                    reverse: true,\n                  })\n                  return\n                }\n\n                if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                  event.preventDefault()\n                  Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                  return\n                }\n\n                // COMPAT: If a void node is selected, or a zero-width text node\n                // adjacent to an inline is selected, we need to handle these\n                // hotkeys manually because browsers won't be able to skip over\n                // the void node with the zero-width space not being an empty\n                // string.\n                if (Hotkeys.isMoveBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isCollapsed(selection)) {\n                    Transforms.move(editor, { reverse: !isRTL })\n                  } else {\n                    Transforms.collapse(editor, { edge: 'start' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isMoveForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isCollapsed(selection)) {\n                    Transforms.move(editor, { reverse: isRTL })\n                  } else {\n                    Transforms.collapse(editor, { edge: 'end' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Transforms.collapse(editor, { edge: 'focus' })\n                  }\n\n                  Transforms.move(editor, { unit: 'word', reverse: !isRTL })\n                  return\n                }\n\n                if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Transforms.collapse(editor, { edge: 'focus' })\n                  }\n\n                  Transforms.move(editor, { unit: 'word', reverse: isRTL })\n                  return\n                }\n\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to guessing at the input intention for hotkeys.\n                // COMPAT: In iOS, some of these hotkeys are handled in the\n                if (!HAS_BEFORE_INPUT_SUPPORT) {\n                  // We don't have a core behavior for these, but they change the\n                  // DOM if we don't prevent them, so we have to.\n                  if (\n                    Hotkeys.isBold(nativeEvent) ||\n                    Hotkeys.isItalic(nativeEvent) ||\n                    Hotkeys.isTransposeCharacter(nativeEvent)\n                  ) {\n                    event.preventDefault()\n                    return\n                  }\n\n                  if (Hotkeys.isSplitBlock(nativeEvent)) {\n                    event.preventDefault()\n                    Editor.insertBreak(editor)\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'backward' })\n                    } else {\n                      Editor.deleteBackward(editor)\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'forward' })\n                    } else {\n                      Editor.deleteForward(editor)\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'backward' })\n                    } else {\n                      Editor.deleteBackward(editor, { unit: 'line' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'forward' })\n                    } else {\n                      Editor.deleteForward(editor, { unit: 'line' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'backward' })\n                    } else {\n                      Editor.deleteBackward(editor, { unit: 'word' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor, { direction: 'forward' })\n                    } else {\n                      Editor.deleteForward(editor, { unit: 'word' })\n                    }\n\n                    return\n                  }\n                } else {\n                  if (IS_CHROME || IS_SAFARI) {\n                    // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                    // an event when deleting backwards in a selected void inline node\n                    if (\n                      selection &&\n                      (Hotkeys.isDeleteBackward(nativeEvent) ||\n                        Hotkeys.isDeleteForward(nativeEvent)) &&\n                      Range.isCollapsed(selection)\n                    ) {\n                      const currentNode = Node.parent(\n                        editor,\n                        selection.anchor.path\n                      )\n\n                      if (\n                        Element.isElement(currentNode) &&\n                        Editor.isVoid(editor, currentNode) &&\n                        Editor.isInline(editor, currentNode)\n                      ) {\n                        event.preventDefault()\n                        Editor.deleteBackward(editor, { unit: 'block' })\n\n                        return\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onKeyDown]\n          )}\n          onPaste={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onPaste)\n              ) {\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to React's `onPaste` here instead.\n                // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                if (\n                  !HAS_BEFORE_INPUT_SUPPORT ||\n                  isPlainTextOnlyPaste(event.nativeEvent)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.insertData(editor, event.clipboardData)\n                }\n              }\n            },\n            [readOnly, attributes.onPaste]\n          )}\n        >\n          <Children\n            decorations={decorations}\n            node={editor}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={editor.selection}\n          />\n        </Component>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefObject<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => <span {...attributes}>{children}</span>\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => Range[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nconst defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (\n    !editor.selection ||\n    (editor.selection && Range.isCollapsed(editor.selection))\n  ) {\n    const leafEl = domRange.startContainer.parentElement!\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed',\n    })\n    delete leafEl.getBoundingClientRect\n  }\n}\n\n/**\n * Check if two DOM range objects are equal.\n */\n\nexport const isRangeEqual = (a: DOMRange, b: DOMRange) => {\n  return (\n    (a.startContainer === b.startContainer &&\n      a.startOffset === b.startOffset &&\n      a.endContainer === b.endContainer &&\n      a.endOffset === b.endOffset) ||\n    (a.startContainer === b.endContainer &&\n      a.startOffset === b.endOffset &&\n      a.endContainer === b.startContainer &&\n      a.endOffset === b.startOffset)\n  )\n}\n\n/**\n * Check if the target is in the editor.\n */\n\nexport const hasTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target)\n}\n\n/**\n * Check if the target is editable and in the editor.\n */\n\nexport const hasEditableTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return (\n    isDOMNode(target) &&\n    ReactEditor.hasDOMNode(editor, target, { editable: true })\n  )\n}\n\n/**\n * Check if the target is inside void and in an non-readonly editor.\n */\n\nexport const isTargetInsideNonReadonlyVoid = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): boolean => {\n  if (IS_READ_ONLY.get(editor)) return false\n\n  const slateNode =\n    hasTarget(editor, target) && ReactEditor.toSlateNode(editor, target)\n  return Editor.isVoid(editor, slateNode)\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n","/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n","import { Editor, Node, Path, Point, Range, Transforms, BaseEditor } from 'slate'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n  EDITOR_TO_WINDOW,\n  EDITOR_TO_KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  isDOMElement,\n  isDOMSelection,\n  normalizeDOMPoint,\n  hasShadowRoot,\n} from '../utils/dom'\nimport { IS_CHROME, IS_FIREFOX } from '../utils/environment'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends BaseEditor {\n  insertData: (data: DataTransfer) => void\n  insertFragmentData: (data: DataTransfer) => boolean\n  insertTextData: (data: DataTransfer) => boolean\n  setFragmentData: (\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n}\n\nexport const ReactEditor = {\n  /**\n   * Return the host window of the current editor.\n   */\n\n  getWindow(editor: ReactEditor): Window {\n    const window = EDITOR_TO_WINDOW.get(editor)\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor')\n    }\n    return window\n  },\n\n  /**\n   * Find a key for a Slate node.\n   */\n\n  findKey(editor: ReactEditor, node: Node): Key {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  /**\n   * Find the path of Slate node.\n   */\n\n  findPath(editor: ReactEditor, node: Node): Path {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${JSON.stringify(node)}`\n    )\n  },\n\n  /**\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\n   */\n\n  findDocumentOrShadowRoot(editor: ReactEditor): Document | ShadowRoot {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = el.getRootNode()\n\n    if (\n      (root instanceof Document || root instanceof ShadowRoot) &&\n      root.getSelection != null\n    ) {\n      return root\n    }\n\n    return el.ownerDocument\n  },\n\n  /**\n   * Check if the editor is focused.\n   */\n\n  isFocused(editor: ReactEditor): boolean {\n    return !!IS_FOCUSED.get(editor)\n  },\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n\n  isReadOnly(editor: ReactEditor): boolean {\n    return !!IS_READ_ONLY.get(editor)\n  },\n\n  /**\n   * Blur the editor.\n   */\n\n  blur(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (root.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  /**\n   * Focus the editor.\n   */\n\n  focus(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, true)\n\n    if (root.activeElement !== el) {\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  /**\n   * Deselect the editor.\n   */\n\n  deselect(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n\n  hasDOMNode(\n    editor: ReactEditor,\n    target: DOMNode,\n    options: { editable?: boolean } = {}\n  ): boolean {\n    const { editable = false } = options\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\n    let targetEl\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = (isDOMElement(target)\n        ? target\n        : target.parentElement) as HTMLElement\n    } catch (err) {\n      if (\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!targetEl) {\n      return false\n    }\n\n    return (\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\n      (!editable || targetEl.isContentEditable\n        ? true\n        : (typeof targetEl.isContentEditable === 'boolean' && // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n            // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n            targetEl.closest('[contenteditable=\"false\"]') === editorEl) ||\n          !!targetEl.getAttribute('data-slate-zero-width'))\n    )\n  },\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n\n  insertData(editor: ReactEditor, data: DataTransfer): void {\n    editor.insertData(data)\n  },\n\n  /**\n   * Insert fragment data from a `DataTransfer` into the editor.\n   */\n\n  insertFragmentData(editor: ReactEditor, data: DataTransfer): boolean {\n    return editor.insertFragmentData(data)\n  },\n\n  /**\n   * Insert text data from a `DataTransfer` into the editor.\n   */\n\n  insertTextData(editor: ReactEditor, data: DataTransfer): boolean {\n    return editor.insertTextData(data)\n  },\n\n  /**\n   * Sets data from the currently selected fragment on a `DataTransfer`.\n   */\n\n  setFragmentData(\n    editor: ReactEditor,\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ): void {\n    editor.setFragmentData(data, originEvent)\n  },\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n\n  toDOMNode(editor: ReactEditor, node: Node): HTMLElement {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT?.get(ReactEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${JSON.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n\n  toDOMPoint(editor: ReactEditor, point: Point): DOMPoint {\n    const [node] = Editor.node(editor, point.path)\n    const el = ReactEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (const text of texts) {\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${JSON.stringify(point)}`\n      )\n    }\n\n    return domPoint\n  },\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\n   *\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\n   */\n\n  toDOMRange(editor: ReactEditor, range: Range): DOMRange {\n    const { anchor, focus } = range\n    const isBackward = Range.isBackward(range)\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : ReactEditor.toDOMPoint(editor, focus)\n\n    const window = ReactEditor.getWindow(editor)\n    const domRange = window.document.createRange()\n    const [startNode, startOffset] = isBackward ? domFocus : domAnchor\n    const [endNode, endOffset] = isBackward ? domAnchor : domFocus\n\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    const startEl = (isDOMElement(startNode)\n      ? startNode\n      : startNode.parentElement) as HTMLElement\n    const isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width')\n    const endEl = (isDOMElement(endNode)\n      ? endNode\n      : endNode.parentElement) as HTMLElement\n    const isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width')\n\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset)\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset)\n    return domRange\n  },\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n\n  toSlateNode(editor: ReactEditor, domNode: DOMNode): Node {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n\n  findEventRange(editor: ReactEditor, event: any): Range {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = ReactEditor.toSlateNode(editor, event.target)\n    const path = ReactEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = ReactEditor.getWindow(editor)\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false,\n    })\n    return range\n  },\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n\n  toSlatePoint<T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: T\n      suppressThrow: T\n    }\n  ): T extends true ? Point | null : Point {\n    const { exactMatch, suppressThrow } = options\n    const [nearestNode, nearestOffset] = exactMatch\n      ? domPoint\n      : normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const voidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n        const window = ReactEditor.getWindow(editor)\n        const range = window.document.createRange()\n        range.setStart(textNode, 0)\n        range.setEnd(nearestNode, nearestOffset)\n\n        const contents = range.cloneContents()\n        const removals = [\n          ...Array.prototype.slice.call(\n            contents.querySelectorAll('[data-slate-zero-width]')\n          ),\n          ...Array.prototype.slice.call(\n            contents.querySelectorAll('[contenteditable=false]')\n          ),\n        ]\n\n        removals.forEach(el => {\n          el!.parentNode!.removeChild(el)\n        })\n\n        // COMPAT: Edge has a bug where Range.prototype.toString() will\n        // convert \\n into \\r\\n. The bug causes a loop when slate-react\n        // attempts to reposition its cursor to match the native position. Use\n        // textContent.length instead.\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n        offset = contents.textContent!.length\n        domNode = textNode\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent.\n        leafNode = voidNode.querySelector('[data-slate-leaf]')!\n\n        // COMPAT: In read-only editors the leaf is not rendered.\n        if (!leafNode) {\n          offset = 1\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n          domNode = leafNode\n          offset = domNode.textContent!.length\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent!.length\n          })\n        }\n      }\n\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        // COMPAT: If the parent node is a Slate zero-width space, editor is\n        // because the text node should have no characters. However, during IME\n        // composition the ASCII characters will be prepended to the zero-width\n        // space, so subtract 1 from the offset to account for the zero-width\n        // space character.\n        (parentNode.hasAttribute('data-slate-zero-width') ||\n          // COMPAT: In Firefox, `range.cloneContents()` returns an extra trailing '\\n'\n          // when the document ends with a new-line character. This results in the offset\n          // length being off by one, so we need to subtract one to account for this.\n          (IS_FIREFOX && domNode.textContent?.endsWith('\\n\\n')))\n      ) {\n        offset--\n      }\n    }\n\n    if (!textNode) {\n      if (suppressThrow) {\n        return null as T extends true ? Point | null : Point\n      }\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\n    const path = ReactEditor.findPath(editor, slateNode)\n    return { path, offset } as T extends true ? Point | null : Point\n  },\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n\n  toSlateRange<T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: T\n      suppressThrow: T\n    }\n  ): T extends true ? Range | null : Range {\n    const { exactMatch, suppressThrow } = options\n    const el = isDOMSelection(domRange)\n      ? domRange.anchorNode\n      : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        anchorNode = domRange.anchorNode\n        anchorOffset = domRange.anchorOffset\n        focusNode = domRange.focusNode\n        focusOffset = domRange.focusOffset\n        // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n        if (IS_CHROME && hasShadowRoot()) {\n          isCollapsed =\n            domRange.anchorNode === domRange.focusNode &&\n            domRange.anchorOffset === domRange.focusOffset\n        } else {\n          isCollapsed = domRange.isCollapsed\n        }\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    const anchor = ReactEditor.toSlatePoint(\n      editor,\n      [anchorNode, anchorOffset],\n      { exactMatch, suppressThrow }\n    )\n    if (!anchor) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    const focus = isCollapsed\n      ? anchor\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n          exactMatch,\n          suppressThrow,\n        })\n    if (!focus) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    let range: Range = { anchor: anchor as Point, focus: focus as Point }\n    // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n    if (\n      Range.isExpanded(range) &&\n      Range.isForward(range) &&\n      isDOMElement(focusNode) &&\n      Editor.void(editor, { at: range.focus, mode: 'highest' })\n    ) {\n      range = Editor.unhangRange(editor, range, { voids: true })\n    }\n\n    return (range as unknown) as T extends true ? Range | null : Range\n  },\n\n  hasRange(editor: ReactEditor, range: Range): boolean {\n    const { anchor, focus } = range\n    return (\n      Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path)\n    )\n  },\n}\n","import { Editor, Path, Range, Text } from 'slate'\n\nimport { ReactEditor } from '../../'\nimport { DOMNode } from '../../utils/dom'\n\nexport type Diff = {\n  start: number\n  end: number\n  insertText: string\n  removeText: string\n}\n\nexport interface TextInsertion {\n  text: Diff\n  path: Path\n}\n\ntype TextRange = {\n  start: number\n  end: number\n}\n\n/**\n * Returns the number of characters that are the same at the beginning of the\n * String.\n *\n * @param prev  the previous text\n * @param next  the next text\n * @returns the offset of the start of the difference; null if there is no difference\n */\nfunction getDiffStart(prev: string, next: string): number | null {\n  const length = Math.min(prev.length, next.length)\n\n  for (let i = 0; i < length; i++) {\n    if (prev.charAt(i) !== next.charAt(i)) return i\n  }\n\n  if (prev.length !== next.length) return length\n  return null\n}\n\n/**\n * Returns the number of characters that are the same at the end of the String\n * up to `max`. Max prevents double-counting characters when there are\n * multiple duplicate characters around the diff area.\n *\n * @param prev  the previous text\n * @param next  the next text\n * @param max  the max length to test.\n * @returns number of characters that are the same at the end of the string\n */\nfunction getDiffEnd(prev: string, next: string, max: number): number | null {\n  const prevLength = prev.length\n  const nextLength = next.length\n  const length = Math.min(prevLength, nextLength, max)\n\n  for (let i = 0; i < length; i++) {\n    const prevChar = prev.charAt(prevLength - i - 1)\n    const nextChar = next.charAt(nextLength - i - 1)\n    if (prevChar !== nextChar) return i\n  }\n\n  if (prev.length !== next.length) return length\n  return null\n}\n\n/**\n * Takes two strings and returns an object representing two offsets. The\n * first, `start` represents the number of characters that are the same at\n * the front of the String. The `end` represents the number of characters\n * that are the same at the end of the String.\n *\n * Returns null if they are identical.\n *\n * @param prev  the previous text\n * @param next  the next text\n * @returns the difference text range; null if there are no differences.\n */\nfunction getDiffOffsets(prev: string, next: string): TextRange | null {\n  if (prev === next) return null\n  const start = getDiffStart(prev, next)\n  if (start === null) return null\n  const maxEnd = Math.min(prev.length - start, next.length - start)\n  const end = getDiffEnd(prev, next, maxEnd)!\n  if (end === null) return null\n  return { start, end }\n}\n\n/**\n * Takes a text string and returns a slice from the string at the given text range\n *\n * @param text  the text\n * @param offsets  the text range\n * @returns the text slice at text range\n */\nfunction sliceText(text: string, offsets: TextRange): string {\n  return text.slice(offsets.start, text.length - offsets.end)\n}\n\n/**\n * Takes two strings and returns a smart diff that can be used to describe the\n * change in a way that can be used as operations like inserting, removing or\n * replacing text.\n *\n * @param prev the previous text\n * @param next the next text\n * @returns the text difference\n */\nexport function diffText(prev?: string, next?: string): Diff | null {\n  if (prev === undefined || next === undefined) return null\n  const offsets = getDiffOffsets(prev, next)\n  if (offsets == null) return null\n  const insertText = sliceText(next, offsets)\n  const removeText = sliceText(prev, offsets)\n  return {\n    start: offsets.start,\n    end: prev.length - offsets.end,\n    insertText,\n    removeText,\n  }\n}\n\nexport function combineInsertedText(insertedText: TextInsertion[]): string {\n  return insertedText.reduce((acc, { text }) => `${acc}${text.insertText}`, '')\n}\n\nexport function getTextInsertion<T extends Editor>(\n  editor: T,\n  domNode: DOMNode\n): TextInsertion | undefined {\n  const node = ReactEditor.toSlateNode(editor, domNode)\n\n  if (!Text.isText(node)) {\n    return undefined\n  }\n\n  const prevText = node.text\n  let nextText = domNode.textContent!\n\n  // textContent will pad an extra \\n when the textContent ends with an \\n\n  if (nextText.endsWith('\\n')) {\n    nextText = nextText.slice(0, nextText.length - 1)\n  }\n\n  // If the text is no different, there is no diff.\n  if (nextText !== prevText) {\n    const textDiff = diffText(prevText, nextText)\n    if (textDiff !== null) {\n      const textPath = ReactEditor.findPath(editor, node)\n\n      return {\n        text: textDiff,\n        path: textPath,\n      }\n    }\n  }\n\n  return undefined\n}\n\nexport function normalizeTextInsertionRange(\n  editor: Editor,\n  range: Range | null,\n  { path, text }: TextInsertion\n) {\n  const insertionRange = {\n    anchor: { path, offset: text.start },\n    focus: { path, offset: text.end },\n  }\n\n  if (!range || !Range.isCollapsed(range)) {\n    return insertionRange\n  }\n\n  const { insertText, removeText } = text\n  const isSingleCharacterInsertion =\n    insertText.length === 1 || removeText.length === 1\n\n  /**\n   * This code handles edge cases that arise from text diffing when the\n   * inserted or removed character is a single character, and the character\n   * right before or after the anchor is the same as the one being inserted or\n   * removed.\n   *\n   * Take this example: hello|o\n   *\n   * If another `o` is inserted at the selection's anchor in the example above,\n   * it should be inserted at the anchor, but using text diffing, we actually\n   * detect that the character was inserted after the second `o`:\n   *\n   * helloo[o]|\n   *\n   * Instead, in these very specific edge cases, we assume that the character\n   * needs to be inserted after the anchor rather than where the diff was found:\n   *\n   * hello[o]|o\n   */\n  if (isSingleCharacterInsertion && Path.equals(range.anchor.path, path)) {\n    const [text] = Array.from(\n      Editor.nodes(editor, { at: range, match: Text.isText })\n    )\n\n    if (text) {\n      const [node] = text\n      const { anchor } = range\n      const characterBeforeAnchor = node.text[anchor.offset - 1]\n      const characterAfterAnchor = node.text[anchor.offset]\n\n      if (insertText.length === 1 && insertText === characterAfterAnchor) {\n        // Assume text should be inserted at the anchor\n        return range\n      }\n\n      if (removeText.length === 1 && removeText === characterBeforeAnchor) {\n        // Assume text should be removed right before the anchor\n        return {\n          anchor: { path, offset: anchor.offset - 1 },\n          focus: { path, offset: anchor.offset },\n        }\n      }\n    }\n  }\n\n  return insertionRange\n}\n","import { Editor, Node, Path, Range } from 'slate'\n\nimport { DOMNode } from '../../utils/dom'\nimport { ReactEditor } from '../..'\nimport { TextInsertion, getTextInsertion } from './diff-text'\n\ninterface MutationData {\n  addedNodes: DOMNode[]\n  removedNodes: DOMNode[]\n  insertedText: TextInsertion[]\n  characterDataMutations: MutationRecord[]\n}\n\ntype MutationDetection = (editor: Editor, mutationData: MutationData) => boolean\n\nexport function gatherMutationData(\n  editor: Editor,\n  mutations: MutationRecord[]\n): MutationData {\n  const addedNodes: DOMNode[] = []\n  const removedNodes: DOMNode[] = []\n  const insertedText: TextInsertion[] = []\n  const characterDataMutations: MutationRecord[] = []\n\n  mutations.forEach(mutation => {\n    switch (mutation.type) {\n      case 'childList': {\n        if (mutation.addedNodes.length) {\n          mutation.addedNodes.forEach(addedNode => {\n            addedNodes.push(addedNode)\n          })\n        }\n\n        mutation.removedNodes.forEach(removedNode => {\n          removedNodes.push(removedNode)\n        })\n\n        break\n      }\n      case 'characterData': {\n        characterDataMutations.push(mutation)\n\n        // Changes to text nodes should consider the parent element\n        const { parentNode } = mutation.target\n\n        if (!parentNode) {\n          return\n        }\n\n        const textInsertion = getTextInsertion(editor, parentNode)\n\n        if (!textInsertion) {\n          return\n        }\n\n        // If we've already detected a diff at that path, we can return early\n        if (\n          insertedText.some(({ path }) => Path.equals(path, textInsertion.path))\n        ) {\n          return\n        }\n\n        // Add the text diff to the array of detected text insertions that need to be reconciled\n        insertedText.push(textInsertion)\n      }\n    }\n  })\n\n  return { addedNodes, removedNodes, insertedText, characterDataMutations }\n}\n\n/**\n * In general, when a line break occurs, there will be more `addedNodes` than `removedNodes`.\n *\n * This isn't always the case however. In some cases, there will be more `removedNodes` than\n * `addedNodes`.\n *\n * To account for these edge cases, the most reliable strategy to detect line break mutations\n * is to check whether a new block was inserted of the same type as the current block.\n */\nexport const isLineBreak: MutationDetection = (editor, { addedNodes }) => {\n  const { selection } = editor\n  const parentNode = selection\n    ? Node.parent(editor, selection.anchor.path)\n    : null\n  const parentDOMNode = parentNode\n    ? ReactEditor.toDOMNode(editor, parentNode)\n    : null\n\n  if (!parentDOMNode) {\n    return false\n  }\n\n  return addedNodes.some(\n    addedNode =>\n      addedNode instanceof HTMLElement &&\n      addedNode.tagName === parentDOMNode?.tagName\n  )\n}\n\n/**\n * So long as we check for line break mutations before deletion mutations,\n * we can safely assume that a set of mutations was a deletion if there are\n * removed nodes.\n */\nexport const isDeletion: MutationDetection = (_, { removedNodes }) => {\n  return removedNodes.length > 0\n}\n\n/**\n * If the selection was expanded and there are removed nodes,\n * the contents of the selection need to be replaced with the diff\n */\nexport const isReplaceExpandedSelection: MutationDetection = (\n  { selection },\n  { removedNodes }\n) => {\n  return selection\n    ? Range.isExpanded(selection) && removedNodes.length > 0\n    : false\n}\n\n/**\n * Plain text insertion\n */\nexport const isTextInsertion: MutationDetection = (_, { insertedText }) => {\n  return insertedText.length > 0\n}\n\n/**\n * Edge case. Detect mutations that remove leaf nodes and also update character data\n */\nexport const isRemoveLeafNodes: MutationDetection = (\n  _,\n  { addedNodes, characterDataMutations, removedNodes }\n) => {\n  return (\n    removedNodes.length > 0 &&\n    addedNodes.length === 0 &&\n    characterDataMutations.length > 0\n  )\n}\n","import { ReactEditor } from '../../plugin/react-editor'\nimport { Editor, Range, Transforms, Text } from 'slate'\n\nimport { DOMNode } from '../../utils/dom'\n\nimport {\n  normalizeTextInsertionRange,\n  combineInsertedText,\n  TextInsertion,\n} from './diff-text'\nimport {\n  gatherMutationData,\n  isDeletion,\n  isLineBreak,\n  isRemoveLeafNodes,\n  isReplaceExpandedSelection,\n  isTextInsertion,\n} from './mutation-detection'\n\n// Replace with `const debug = console.log` to debug\nconst debug = (...message: any[]) => {}\n\n/**\n * Based loosely on:\n *\n * https://github.com/facebook/draft-js/blob/master/src/component/handlers/composition/DOMObserver.js\n * https://github.com/ProseMirror/prosemirror-view/blob/master/src/domobserver.js\n *\n * The input manager attempts to map observed mutations on the document to a\n * set of operations in order to reconcile Slate's internal value with the DOM.\n *\n * Mutations are processed synchronously as they come in. Only mutations that occur\n * during a user input loop are processed, as other mutations can occur within the\n * document that were not initiated by user input.\n *\n * The mutation reconciliation process attempts to match mutations to the following\n * patterns:\n *\n * - Text updates\n * - Deletions\n * - Line breaks\n *\n * @param editor\n * @param restoreDOM\n */\n\nexport class AndroidInputManager {\n  constructor(private editor: ReactEditor, private restoreDOM: () => void) {\n    this.editor = editor\n    this.restoreDOM = restoreDOM\n  }\n\n  /**\n   * Handle MutationObserver flush\n   *\n   * @param mutations\n   */\n\n  flush = (mutations: MutationRecord[]) => {\n    debug('flush')\n\n    try {\n      this.reconcileMutations(mutations)\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err)\n\n      // Failed to reconcile mutations, restore DOM to its previous state\n      this.restoreDOM()\n    }\n  }\n\n  /**\n   * Reconcile a batch of mutations\n   *\n   * @param mutations\n   */\n\n  private reconcileMutations = (mutations: MutationRecord[]) => {\n    const mutationData = gatherMutationData(this.editor, mutations)\n    const { insertedText, removedNodes } = mutationData\n\n    debug('processMutations', mutations, mutationData)\n\n    if (isReplaceExpandedSelection(this.editor, mutationData)) {\n      const text = combineInsertedText(insertedText)\n      this.replaceExpandedSelection(text)\n    } else if (isLineBreak(this.editor, mutationData)) {\n      this.insertBreak()\n    } else if (isRemoveLeafNodes(this.editor, mutationData)) {\n      this.removeLeafNodes(removedNodes)\n    } else if (isDeletion(this.editor, mutationData)) {\n      this.deleteBackward()\n    } else if (isTextInsertion(this.editor, mutationData)) {\n      this.insertText(insertedText)\n    }\n  }\n\n  /**\n   * Apply text diff\n   */\n\n  private insertText = (insertedText: TextInsertion[]) => {\n    debug('insertText')\n\n    const { selection, marks } = this.editor\n\n    // Insert the batched text diffs\n    insertedText.forEach(insertion => {\n      const text = insertion.text.insertText\n      const at = normalizeTextInsertionRange(this.editor, selection, insertion)\n      if (marks) {\n        const node = { text, ...marks }\n        Transforms.insertNodes(this.editor, node, {\n          match: Text.isText,\n          at,\n          select: true,\n        })\n        this.editor.marks = null\n      } else {\n        Transforms.insertText(this.editor, text, {\n          at,\n        })\n      }\n    })\n  }\n\n  /**\n   * Handle line breaks\n   */\n\n  private insertBreak = () => {\n    debug('insertBreak')\n\n    const { selection } = this.editor\n\n    Editor.insertBreak(this.editor)\n\n    this.restoreDOM()\n\n    if (selection) {\n      // Compat: Move selection to the newly inserted block if it has not moved\n      setTimeout(() => {\n        if (\n          this.editor.selection &&\n          Range.equals(selection, this.editor.selection)\n        ) {\n          Transforms.move(this.editor)\n        }\n      }, 100)\n    }\n  }\n\n  /**\n   * Handle expanded selection being deleted or replaced by text\n   */\n\n  private replaceExpandedSelection = (text: string) => {\n    debug('replaceExpandedSelection')\n\n    // Delete expanded selection\n    Editor.deleteFragment(this.editor)\n\n    if (text.length) {\n      // Selection was replaced by text, insert the entire text diff\n      Editor.insertText(this.editor, text)\n    }\n\n    this.restoreDOM()\n  }\n\n  /**\n   * Handle `backspace` that merges blocks\n   */\n\n  private deleteBackward = () => {\n    debug('deleteBackward')\n\n    Editor.deleteBackward(this.editor)\n    ReactEditor.focus(this.editor)\n\n    this.restoreDOM()\n  }\n\n  /**\n   * Handle mutations that remove specific leaves\n   */\n  private removeLeafNodes = (nodes: DOMNode[]) => {\n    for (const node of nodes) {\n      const slateNode = ReactEditor.toSlateNode(this.editor, node)\n\n      if (slateNode) {\n        const path = ReactEditor.findPath(this.editor, slateNode)\n\n        Transforms.delete(this.editor, { at: path })\n        this.restoreDOM()\n      }\n    }\n  }\n}\n\nexport default AndroidInputManager\n","import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from '../../hooks/use-isomorphic-layout-effect'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Disconnect mutation observer during render phase\n    mutationObserver.disconnect()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    // Attach mutation observer after render phase has finished\n    mutationObserver.observe(node.current, options)\n\n    // Clean up after effect\n    return mutationObserver.disconnect.bind(mutationObserver)\n  })\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { Node as SlateNode, Path } from 'slate'\nimport { ReactEditor, useSlateStatic } from '../..'\nimport { DOMNode, isDOMElement } from '../../utils/dom'\nimport { ELEMENT_TO_NODE, NODE_TO_RESTORE_DOM } from '../../utils/weak-maps'\nimport { useMutationObserver } from './use-mutation-observer'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  childList: true,\n  characterData: true,\n  subtree: true,\n}\n\nfunction findClosestKnowSlateNode(domNode: DOMNode): SlateNode | null {\n  let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n  if (domEl && !domEl.hasAttribute('data-slate-node')) {\n    domEl = domEl.closest(`[data-slate-node]`)\n  }\n\n  const slateNode = domEl && ELEMENT_TO_NODE.get(domEl as HTMLElement)\n  if (slateNode) {\n    return slateNode\n  }\n\n  // Unknown dom element with a slate-slate-node attribute => the IME\n  // most likely duplicated the node so we have to restore the parent\n  return domEl?.parentElement\n    ? findClosestKnowSlateNode(domEl.parentElement)\n    : null\n}\n\nexport function useRestoreDom(\n  node: React.RefObject<HTMLElement>,\n  receivedUserInput: React.RefObject<boolean>\n) {\n  const editor = useSlateStatic()\n  const mutatedNodes = useRef<Set<SlateNode>>(new Set())\n\n  const handleDOMMutation = useCallback((mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    mutations.forEach(({ target }) => {\n      const slateNode = findClosestKnowSlateNode(target)\n      if (!slateNode) {\n        return\n      }\n\n      return mutatedNodes.current.add(slateNode)\n    })\n  }, [])\n\n  useMutationObserver(node, handleDOMMutation, MUTATION_OBSERVER_CONFIG)\n\n  // Clear mutated nodes on every render\n  mutatedNodes.current.clear()\n  const restore = useCallback(() => {\n    const mutated = Array.from(mutatedNodes.current.values())\n\n    // Filter out child nodes of nodes that will be restored anyway\n    const nodesToRestore = mutated.filter(\n      n =>\n        !mutated.some(m =>\n          Path.isParent(\n            ReactEditor.findPath(editor, m),\n            ReactEditor.findPath(editor, n)\n          )\n        )\n    )\n\n    nodesToRestore.forEach(n => {\n      NODE_TO_RESTORE_DOM.get(n)?.()\n    })\n\n    mutatedNodes.current.clear()\n  }, [])\n\n  return restore\n}\n","import { useCallback, useEffect, useRef } from 'react'\n\nimport { ReactEditor } from '../..'\nimport { useSlateStatic } from '../../hooks/use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameRef = useRef<number | null>(null)\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current === false) {\n      const window = ReactEditor.getWindow(editor)\n\n      receivedUserInput.current = true\n\n      if (animationFrameRef.current) {\n        window.cancelAnimationFrame(animationFrameRef.current)\n      }\n\n      animationFrameRef.current = window.requestAnimationFrame(() => {\n        receivedUserInput.current = false\n        animationFrameRef.current = null\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    // Reset user input tracking on every render\n    if (receivedUserInput.current) {\n      receivedUserInput.current = false\n    }\n  })\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n","import { RefObject, useCallback, useMemo, useRef, useState } from 'react'\n\nimport { useSlateStatic } from '../../hooks/use-slate-static'\n\nimport { AndroidInputManager } from './android-input-manager'\nimport { useRestoreDom } from './use-restore-dom'\nimport { useMutationObserver } from './use-mutation-observer'\nimport { useTrackUserInput } from './use-track-user-input'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport function useAndroidInputManager(node: RefObject<HTMLElement>) {\n  const editor = useSlateStatic()\n\n  const { receivedUserInput, onUserInput } = useTrackUserInput()\n  const restoreDom = useRestoreDom(node, receivedUserInput)\n\n  const inputManager = useMemo(\n    () => new AndroidInputManager(editor, restoreDom),\n    [restoreDom, editor]\n  )\n\n  const timeoutId = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const isReconciling = useRef(false)\n  const flush = useCallback((mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    isReconciling.current = true\n    inputManager.flush(mutations)\n\n    if (timeoutId.current) {\n      clearTimeout(timeoutId.current)\n    }\n\n    timeoutId.current = setTimeout(() => {\n      isReconciling.current = false\n      timeoutId.current = null\n    }, 250)\n  }, [])\n\n  useMutationObserver(node, flush, MUTATION_OBSERVER_CONFIG)\n\n  return {\n    isReconciling,\n    onUserInput,\n  }\n}\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { Descendant, Editor, Element, Node, Range, Transforms } from 'slate'\nimport throttle from 'lodash/throttle'\nimport scrollIntoView from 'scroll-into-view-if-needed'\n\nimport { DefaultPlaceholder, ReactEditor } from '../..'\nimport { ReadOnlyContext } from '../../hooks/use-read-only'\nimport { useSlate } from '../../hooks/use-slate'\nimport { useIsomorphicLayoutEffect } from '../../hooks/use-isomorphic-layout-effect'\nimport { DecorateContext } from '../../hooks/use-decorate'\nimport {\n  DOMElement,\n  isDOMElement,\n  isDOMNode,\n  getDefaultView,\n  getClipboardData,\n} from '../../utils/dom'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n} from '../../utils/weak-maps'\nimport { EditableProps } from '../editable'\nimport useChildren from '../../hooks/use-children'\nimport {\n  defaultDecorate,\n  hasEditableTarget,\n  isEventHandled,\n  isDOMEventHandled,\n  isTargetInsideNonReadonlyVoid,\n} from '../editable'\n\nimport { useAndroidInputManager } from './use-android-input-manager'\nimport { useContentKey } from '../../hooks/use-content-key'\n\n/**\n * Editable.\n */\n\nexport const AndroidEditable = (props: EditableProps): JSX.Element => {\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = props => <DefaultPlaceholder {...props} />,\n    style = {},\n    as: Component = 'div',\n    ...attributes\n  } = props\n  const editor = useSlate()\n  const ref = useRef<HTMLDivElement>(null)\n  const inputManager = useAndroidInputManager(ref)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n    }),\n    []\n  )\n\n  const contentKey = useContentKey(editor)\n\n  // Whenever the editor updates...\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    try {\n      // Make sure the DOM selection state is in sync.\n      const { selection } = editor\n      const root = ReactEditor.findDocumentOrShadowRoot(editor)\n      const domSelection = root.getSelection()\n\n      if (!domSelection || !ReactEditor.isFocused(editor)) {\n        return\n      }\n\n      const hasDomSelection = domSelection.type !== 'None'\n\n      // If the DOM selection is properly unset, we're done.\n      if (!selection && !hasDomSelection) {\n        return\n      }\n\n      // verify that the dom selection is in the editor\n      const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n      let hasDomSelectionInEditor = false\n      if (\n        editorElement.contains(domSelection.anchorNode) &&\n        editorElement.contains(domSelection.focusNode)\n      ) {\n        hasDomSelectionInEditor = true\n      }\n\n      // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n      if (hasDomSelection && hasDomSelectionInEditor && selection) {\n        const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n          suppressThrow: true,\n        })\n        if (slateRange && Range.equals(slateRange, selection)) {\n          return\n        }\n      }\n\n      // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: false,\n        })\n        return\n      }\n\n      // Otherwise the DOM selection is out of sync, so update it.\n      const el = ReactEditor.toDOMNode(editor, editor)\n      state.isUpdatingSelection = true\n\n      const newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n\n      if (newDomRange) {\n        if (Range.isBackward(selection!)) {\n          domSelection.setBaseAndExtent(\n            newDomRange.endContainer,\n            newDomRange.endOffset,\n            newDomRange.startContainer,\n            newDomRange.startOffset\n          )\n        } else {\n          domSelection.setBaseAndExtent(\n            newDomRange.startContainer,\n            newDomRange.startOffset,\n            newDomRange.endContainer,\n            newDomRange.endOffset\n          )\n        }\n        const leafEl = newDomRange.startContainer.parentElement!\n        leafEl.getBoundingClientRect = newDomRange.getBoundingClientRect.bind(\n          newDomRange\n        )\n        scrollIntoView(leafEl, {\n          scrollMode: 'if-needed',\n          boundary: el,\n        })\n        // @ts-ignore\n        delete leafEl.getBoundingClientRect\n      } else {\n        domSelection.removeAllRanges()\n      }\n\n      setTimeout(() => {\n        state.isUpdatingSelection = false\n      })\n    } catch {\n      // Failed to update selection, likely due to reconciliation error\n      state.isUpdatingSelection = false\n    }\n  })\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      if (\n        !readOnly &&\n        hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        inputManager.onUserInput()\n      }\n    },\n    [readOnly, propsOnDOMBeforeInput]\n  )\n\n  // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  useIsomorphicLayoutEffect(() => {\n    const node = ref.current\n\n    // @ts-ignore The `beforeinput` event isn't recognized.\n    node?.addEventListener('beforeinput', onDOMBeforeInput)\n\n    // @ts-ignore The `beforeinput` event isn't recognized.\n    return () => node?.removeEventListener('beforeinput', onDOMBeforeInput)\n  }, [contentKey, propsOnDOMBeforeInput])\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useCallback(\n    throttle(() => {\n      try {\n        if (!state.isUpdatingSelection && !inputManager.isReconciling.current) {\n          const root = ReactEditor.findDocumentOrShadowRoot(editor)\n          const { activeElement } = root\n          const el = ReactEditor.toDOMNode(editor, editor)\n          const domSelection = root.getSelection()\n\n          if (activeElement === el) {\n            state.latestElement = activeElement\n            IS_FOCUSED.set(editor, true)\n          } else {\n            IS_FOCUSED.delete(editor)\n          }\n\n          if (!domSelection) {\n            return Transforms.deselect(editor)\n          }\n\n          const { anchorNode, focusNode } = domSelection\n\n          const anchorNodeSelectable =\n            hasEditableTarget(editor, anchorNode) ||\n            isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n          const focusNodeSelectable =\n            hasEditableTarget(editor, focusNode) ||\n            isTargetInsideNonReadonlyVoid(editor, focusNode)\n\n          if (anchorNodeSelectable && focusNodeSelectable) {\n            const range = ReactEditor.toSlateRange(editor, domSelection, {\n              exactMatch: false,\n              suppressThrow: false,\n            })\n            Transforms.select(editor, range)\n          } else {\n            Transforms.deselect(editor)\n          }\n        }\n      } catch {\n        // Failed to update selection, likely due to reconciliation error\n      }\n    }, 100),\n    [readOnly]\n  )\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n    window.document.addEventListener('selectionchange', onDOMSelectionChange)\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        onDOMSelectionChange\n      )\n    }\n  })\n\n  const decorations = decorate([editor, []])\n\n  if (\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === ''\n  ) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <Component\n          key={contentKey}\n          role={readOnly ? undefined : 'textbox'}\n          {...attributes}\n          spellCheck={attributes.spellCheck}\n          autoCorrect={attributes.autoCorrect}\n          autoCapitalize={attributes.autoCapitalize}\n          data-slate-editor\n          data-slate-node=\"value\"\n          contentEditable={readOnly ? undefined : true}\n          suppressContentEditableWarning\n          ref={ref}\n          style={{\n            // Allow positioning relative to the editable element.\n            position: 'relative',\n            // Prevent the default outline styles.\n            outline: 'none',\n            // Preserve adjacent whitespace and new lines.\n            whiteSpace: 'pre-wrap',\n            // Allow words to break if they are too long.\n            wordWrap: 'break-word',\n            // Allow for passed-in styles to override anything.\n            ...style,\n          }}\n          onCopy={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCopy)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData, 'copy')\n              }\n            },\n            [attributes.onCopy]\n          )}\n          onCut={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onCut)\n              ) {\n                event.preventDefault()\n                ReactEditor.setFragmentData(editor, event.clipboardData, 'cut')\n                const { selection } = editor\n\n                if (selection) {\n                  if (Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    const node = Node.parent(editor, selection.anchor.path)\n                    if (Editor.isVoid(editor, node)) {\n                      Transforms.delete(editor)\n                    }\n                  }\n                }\n              }\n            },\n            [readOnly, attributes.onCut]\n          )}\n          onFocus={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                !readOnly &&\n                !state.isUpdatingSelection &&\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onFocus)\n              ) {\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                state.latestElement = root.activeElement\n\n                IS_FOCUSED.set(editor, true)\n              }\n            },\n            [readOnly, attributes.onFocus]\n          )}\n          onBlur={useCallback(\n            (event: React.FocusEvent<HTMLDivElement>) => {\n              if (\n                readOnly ||\n                state.isUpdatingSelection ||\n                !hasEditableTarget(editor, event.target) ||\n                isEventHandled(event, attributes.onBlur)\n              ) {\n                return\n              }\n\n              // COMPAT: If the current `activeElement` is still the previous\n              // one, this is due to the window being blurred when the tab\n              // itself becomes unfocused, so we want to abort early to allow to\n              // editor to stay focused when the tab becomes focused again.\n              const root = ReactEditor.findDocumentOrShadowRoot(editor)\n              if (state.latestElement === root.activeElement) {\n                return\n              }\n\n              const { relatedTarget } = event\n              const el = ReactEditor.toDOMNode(editor, editor)\n\n              // COMPAT: The event should be ignored if the focus is returning\n              // to the editor from an embedded editable element (eg. an <input>\n              // element inside a void node).\n              if (relatedTarget === el) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving from\n              // the editor to inside a void node's spacer element.\n              if (\n                isDOMElement(relatedTarget) &&\n                relatedTarget.hasAttribute('data-slate-spacer')\n              ) {\n                return\n              }\n\n              // COMPAT: The event should be ignored if the focus is moving to a\n              // non- editable section of an element that isn't a void node (eg.\n              // a list item of the check list example).\n              if (\n                relatedTarget != null &&\n                isDOMNode(relatedTarget) &&\n                ReactEditor.hasDOMNode(editor, relatedTarget)\n              ) {\n                const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                if (Element.isElement(node) && !editor.isVoid(node)) {\n                  return\n                }\n              }\n\n              IS_FOCUSED.delete(editor)\n            },\n            [readOnly, attributes.onBlur]\n          )}\n          onPaste={useCallback(\n            (event: React.ClipboardEvent<HTMLDivElement>) => {\n              // this will make application/x-slate-fragment exist when onPaste attributes is passed\n              event.clipboardData = getClipboardData(event.clipboardData)\n              // This unfortunately needs to be handled with paste events instead.\n              if (\n                hasEditableTarget(editor, event.target) &&\n                !isEventHandled(event, attributes.onPaste) &&\n                !readOnly\n              ) {\n                event.preventDefault()\n                ReactEditor.insertData(editor, event.clipboardData)\n              }\n            },\n            [readOnly, attributes.onPaste]\n          )}\n        >\n          {useChildren({\n            decorations,\n            node: editor,\n            renderElement,\n            renderPlaceholder,\n            renderLeaf,\n            selection: editor.selection,\n          })}\n        </Component>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n","import React, { useMemo, useState, useCallback, useEffect } from 'react'\nimport { Editor, Node, Element, Descendant } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { SlateContext } from '../hooks/use-slate'\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  value: Descendant[]\n  children: React.ReactNode\n  onChange: (value: Descendant[]) => void\n}) => {\n  const { editor, children, onChange, value, ...rest } = props\n\n  const [context, setContext] = React.useState<[ReactEditor]>(() => {\n    if (!Node.isNodeList(value)) {\n      throw new Error(\n        `[Slate] value is invalid! Expected a list of elements` +\n          `but got: ${JSON.stringify(value)}`\n      )\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\n        `[Slate] editor is invalid! you passed:` + `${JSON.stringify(editor)}`\n      )\n    }\n    editor.children = value\n    Object.assign(editor, rest)\n    return [editor]\n  })\n\n  const onContextChange = useCallback(() => {\n    onChange(editor.children)\n    setContext([editor])\n  }, [onChange])\n\n  EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n  useEffect(() => {\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n    }\n  }, [])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    document.addEventListener('focus', fn, true)\n    return () => document.removeEventListener('focus', fn, true)\n  }, [])\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    document.addEventListener('blur', fn, true)\n    return () => document.removeEventListener('blur', fn, true)\n  }, [])\n\n  return (\n    <SlateContext.Provider value={context}>\n      <EditorContext.Provider value={editor}>\n        <FocusedContext.Provider value={isFocused}>\n          {children}\n        </FocusedContext.Provider>\n      </EditorContext.Provider>\n    </SlateContext.Provider>\n  )\n}\n","import { useContext } from 'react'\n\nimport { EditorContext } from './use-slate-static'\n\n/**\n * Get the current editor object from the React context.\n * @deprecated Use useSlateStatic instead.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","/**\n * Utilities for single-line deletion\n */\n\nimport { Range, Editor } from 'slate'\nimport { ReactEditor } from '..'\n\nconst doRectsIntersect = (rect: DOMRect, compareRect: DOMRect) => {\n  const middle = (compareRect.top + compareRect.bottom) / 2\n\n  return rect.top <= middle && rect.bottom >= middle\n}\n\nconst areRangesSameLine = (\n  editor: ReactEditor,\n  range1: Range,\n  range2: Range\n) => {\n  const rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect()\n  const rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect()\n\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1)\n}\n\n/**\n * A helper utility that returns the end portion of a `Range`\n * which is located on a single line.\n *\n * @param {Editor} editor The editor object to compare against\n * @param {Range} parentRange The parent range to compare against\n * @returns {Range} A valid portion of the parentRange which is one a single line\n */\nexport const findCurrentLineRange = (\n  editor: ReactEditor,\n  parentRange: Range\n): Range => {\n  const parentRangeBoundary = Editor.range(editor, Range.end(parentRange))\n  const positions = Array.from(Editor.positions(editor, { at: parentRange }))\n\n  let left = 0\n  let right = positions.length\n  let middle = Math.floor(right / 2)\n\n  if (\n    areRangesSameLine(\n      editor,\n      Editor.range(editor, positions[left]),\n      parentRangeBoundary\n    )\n  ) {\n    return Editor.range(editor, positions[left], parentRangeBoundary)\n  }\n\n  if (positions.length < 2) {\n    return Editor.range(\n      editor,\n      positions[positions.length - 1],\n      parentRangeBoundary\n    )\n  }\n\n  while (middle !== positions.length && middle !== left) {\n    if (\n      areRangesSameLine(\n        editor,\n        Editor.range(editor, positions[middle]),\n        parentRangeBoundary\n      )\n    ) {\n      right = middle\n    } else {\n      left = middle\n    }\n\n    middle = Math.floor((left + right) / 2)\n  }\n\n  return Editor.range(editor, positions[right], parentRangeBoundary)\n}\n","import ReactDOM from 'react-dom'\nimport { Editor, Node, Path, Operation, Transforms, Range } from 'slate'\n\nimport { ReactEditor } from './react-editor'\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_ON_CHANGE,\n  NODE_TO_KEY,\n} from '../utils/weak-maps'\nimport {\n  isDOMText,\n  getPlainText,\n  getSlateFragmentAttribute,\n} from '../utils/dom'\nimport { findCurrentLineRange } from '../utils/lines'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\n\nexport const withReact = <T extends Editor>(editor: T) => {\n  const e = editor as T & ReactEditor\n  const { apply, onChange, deleteBackward } = e\n\n  // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap())\n\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit)\n    }\n\n    if (editor.selection && Range.isCollapsed(editor.selection)) {\n      const parentBlockEntry = Editor.above(editor, {\n        match: n => Editor.isBlock(editor, n),\n        at: editor.selection,\n      })\n\n      if (parentBlockEntry) {\n        const [, parentBlockPath] = parentBlockEntry\n        const parentElementRange = Editor.range(\n          editor,\n          parentBlockPath,\n          editor.selection.anchor\n        )\n\n        const currentLineRange = findCurrentLineRange(e, parentElementRange)\n\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(editor, { at: currentLineRange })\n        }\n      }\n    }\n  }\n\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node': {\n        for (const [node, path] of Editor.levels(e, { at: op.path })) {\n          const key = ReactEditor.findKey(e, node)\n          matches.push([path, key])\n        }\n\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node':\n      case 'merge_node':\n      case 'split_node': {\n        for (const [node, path] of Editor.levels(e, {\n          at: Path.parent(op.path),\n        })) {\n          const key = ReactEditor.findKey(e, node)\n          matches.push([path, key])\n        }\n\n        break\n      }\n\n      case 'move_node': {\n        for (const [node, path] of Editor.levels(e, {\n          at: Path.common(Path.parent(op.path), Path.parent(op.newPath)),\n        })) {\n          const key = ReactEditor.findKey(e, node)\n          matches.push([path, key])\n        }\n        break\n      }\n    }\n\n    apply(op)\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n  }\n\n  e.setFragmentData = (data: Pick<DataTransfer, 'getData' | 'setData'>) => {\n    const { selection } = e\n\n    if (!selection) {\n      return\n    }\n\n    const [start, end] = Range.edges(selection)\n    const startVoid = Editor.void(e, { at: start.path })\n    const endVoid = Editor.void(e, { at: end.path })\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return\n    }\n\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    const domRange = ReactEditor.toDOMRange(e, selection)\n    let contents = domRange.cloneContents()\n    let attach = contents.childNodes[0] as HTMLElement\n\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node as HTMLElement\n      }\n    })\n\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      const [voidNode] = endVoid\n      const r = domRange.cloneRange()\n      const domNode = ReactEditor.toDOMNode(e, voidNode)\n      r.setEndAfter(domNode)\n      contents = r.cloneContents()\n    }\n\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n    }\n\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n      zw => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      }\n    )\n\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      const span = attach.ownerDocument.createElement('span')\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre'\n      span.appendChild(attach)\n      contents.appendChild(span)\n      attach = span\n    }\n\n    const fragment = e.getFragment()\n    const string = JSON.stringify(fragment)\n    const encoded = window.btoa(encodeURIComponent(string))\n    attach.setAttribute('data-slate-fragment', encoded)\n    data.setData('application/x-slate-fragment', encoded)\n\n    // Add the content to a <div> so that we can get its inner HTML.\n    const div = contents.ownerDocument.createElement('div')\n    div.appendChild(contents)\n    div.setAttribute('hidden', 'true')\n    contents.ownerDocument.body.appendChild(div)\n    data.setData('text/html', div.innerHTML)\n    data.setData('text/plain', getPlainText(div))\n    contents.ownerDocument.body.removeChild(div)\n    return data\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data)\n    }\n  }\n\n  e.insertFragmentData = (data: DataTransfer): boolean => {\n    /**\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\n     */\n    const fragment =\n      data.getData('application/x-slate-fragment') ||\n      getSlateFragmentAttribute(data)\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      e.insertFragment(parsed)\n      return true\n    }\n    return false\n  }\n\n  e.insertTextData = (data: DataTransfer): boolean => {\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split(/\\r\\n|\\r|\\n/)\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, { always: true })\n        }\n\n        e.insertText(line)\n        split = true\n      }\n      return true\n    }\n    return false\n  }\n\n  e.onChange = () => {\n    // COMPAT: React doesn't batch `setState` hook calls, which means that the\n    // children and selection can get out of sync for one render pass. So we\n    // have to use this unstable API to ensure it batches them. (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    ReactDOM.unstable_batchedUpdates(() => {\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n      if (onContextChange) {\n        onContextChange()\n      }\n\n      onChange()\n    })\n  }\n\n  return e\n}\n","// Components\n// Environment-dependent Editable\nimport { Editable as DefaultEditable } from './components/editable'\nimport { AndroidEditable } from './components/android/android-editable'\nimport { IS_ANDROID } from './utils/environment'\n\nexport const Editable = IS_ANDROID ? AndroidEditable : DefaultEditable\nexport {\n  Editable as DefaultEditable,\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n  DefaultPlaceholder,\n} from './components/editable'\nexport { AndroidEditable } from './components/android/android-editable'\nexport { DefaultElement } from './components/element'\nexport { DefaultLeaf } from './components/leaf'\nexport { Slate } from './components/slate'\n\n// Hooks\nexport { useEditor } from './hooks/use-editor'\nexport { useSlateStatic } from './hooks/use-slate-static'\nexport { useFocused } from './hooks/use-focused'\nexport { useReadOnly } from './hooks/use-read-only'\nexport { useSelected } from './hooks/use-selected'\nexport { useSlate } from './hooks/use-slate'\n\n// Plugin\nexport { ReactEditor } from './plugin/react-editor'\nexport { withReact } from './plugin/with-react'\n"],"names":["objectWithoutPropertiesLoose","String","props","isLast","leaf","parent","text","editor","useSlateStatic","path","ReactEditor","findPath","parentPath","Path","isVoid","React","ZeroWidthString","length","Node","string","children","isInline","Editor","isLineBreak","slice","TextString","isTrailing","ref","useRef","forceUpdateCount","current","textContent","key","NODE_TO_INDEX","WeakMap","NODE_TO_PARENT","EDITOR_TO_WINDOW","EDITOR_TO_ELEMENT","ELEMENT_TO_NODE","NODE_TO_ELEMENT","NODE_TO_KEY","EDITOR_TO_KEY_TO_ELEMENT","IS_READ_ONLY","IS_FOCUSED","EDITOR_TO_ON_CHANGE","NODE_TO_RESTORE_DOM","PLACEHOLDER_SYMBOL","Symbol","Leaf","renderPlaceholder","renderLeaf","DefaultLeaf","placeholderRef","useEffect","placeholderEl","editorEl","document","querySelector","style","minHeight","clientHeight","placeholderProps","placeholder","attributes","position","pointerEvents","width","maxWidth","display","opacity","userSelect","textDecoration","contentEditable","Fragment","MemoizedLeaf","memo","prev","next","Text","equals","IS_IOS","navigator","window","test","userAgent","MSStream","IS_APPLE","IS_ANDROID","IS_FIREFOX","IS_SAFARI","IS_EDGE_LEGACY","IS_CHROME","IS_CHROME_LEGACY","IS_FIREFOX_LEGACY","IS_QQBROWSER","IS_UC_MOBILE","IS_WECHATBROWSER","IS_HYPERCLASS_IOS","IS_HYPERCLASS_ANDROID","CAN_USE_DOM","createElement","HAS_BEFORE_INPUT_SUPPORT","globalThis","InputEvent","prototype","getTargetRanges","useIsomorphicLayoutEffect","useLayoutEffect","shallowCompare","obj1","obj2","Object","keys","every","hasOwnProperty","isDecoratorRangeListEqual","list","another","i","range","other","rangeOwnProps","otherOwnProps","Range","useContentKey","node","contentKeyRef","updateAnimationFrameRef","setForceRerenderCounter","useState","set","requestAnimationFrame","state","delete","cancelAnimationFrame","decorations","leaves","SlateText","findKey","push","id","KEY_TO_ELEMENT","get","contentKey","undefined","MemoizedText","Element","element","renderElement","p","DefaultElement","selection","readOnly","useReadOnly","useChildren","hasInlines","dir","getDirection","Tag","texts","height","color","outline","content","MemoizedElement","EditorContext","createContext","useContext","Error","DecorateContext","useDecorate","SelectedContext","useSelected","decorate","isLeafBlock","isElement","concat","n","sel","intersection","ds","dec","d","Provider","value","ElementComponent","TextComponent","HOTKEYS","bold","compose","moveBackward","moveForward","moveWordBackward","moveWordForward","deleteBackward","deleteForward","extendBackward","extendForward","italic","splitBlock","undo","APPLE_HOTKEYS","moveLineBackward","moveLineForward","deleteLineBackward","deleteLineForward","deleteWordBackward","deleteWordForward","extendLineBackward","extendLineForward","redo","transposeCharacter","WINDOWS_HOTKEYS","create","generic","apple","windows","isGeneric","isKeyHotkey","isApple","isWindows","event","isBold","isCompose","isMoveBackward","isMoveForward","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","isExtendBackward","isExtendForward","isExtendLineBackward","isExtendLineForward","isItalic","isMoveLineBackward","isMoveLineForward","isMoveWordBackward","isMoveWordForward","isRedo","isSplitBlock","isTransposeCharacter","isUndo","ReadOnlyContext","SlateContext","useSlate","context","getDefaultView","ownerDocument","defaultView","isDOMComment","isDOMNode","nodeType","isDOMElement","isDOMSelection","anchorNode","Selection","isDOMText","isPlainTextOnlyPaste","clipboardData","getData","types","normalizeDOMPoint","domPoint","offset","childNodes","index","getEditableChildAndIndex","getEditableChild","hasShadowRoot","activeElement","shadowRoot","direction","child","triedForward","triedBackward","getAttribute","getPlainText","domNode","nodeValue","childNode","Array","from","getComputedStyle","getPropertyValue","tagName","catchSlateFragment","getSlateFragmentAttribute","dataTransfer","htmlData","fragment","match","getClipboardData","DataTransfer","forEach","type","setData","Children","Editable","autoFocus","defaultDecorate","onDOMBeforeInput","propsOnDOMBeforeInput","DefaultPlaceholder","scrollSelectionIntoView","defaultScrollSelectionIntoView","as","Component","isComposing","setIsComposing","deferredOperations","useMemo","hasInsertPrefixInCompositon","isDraggingInternally","isUpdatingSelection","latestElement","root","findDocumentOrShadowRoot","domSelection","getSelection","isFocused","hasDomSelection","editorElement","hasDomSelectionInEditor","contains","focusNode","slateRange","toSlateRange","exactMatch","suppressThrow","hasRange","newDomRange","toDOMRange","isBackward","setBaseAndExtent","endContainer","endOffset","startContainer","startOffset","removeAllRanges","setTimeout","el","toDOMNode","focus","onDOMSelectionChange","useCallback","throttle","Transforms","deselect","anchorNodeSelectable","hasEditableTarget","isTargetInsideNonReadonlyVoid","focusNodeSelectable","select","scheduleOnDOMSelectionChange","debounce","target","isDOMEventHandled","flush","inputType","data","native","isCollapsed","anchor","marks","inline","above","at","mode","inlinePath","isEnd","preventDefault","startsWith","targetRange","isExpanded","endsWith","deleteFragment","unit","insertBreak","constructor","name","insertData","insertText","addEventListener","removeEventListener","getWindow","start","role","spellCheck","autoCorrect","autoCapitalize","zindex","suppressContentEditableWarning","whiteSpace","wordWrap","onBeforeInput","isEventHandled","onInput","op","onBlur","relatedTarget","hasAttribute","hasDOMNode","toSlateNode","onClick","hasTarget","hasPath","lookupNode","end","startVoid","void","endVoid","onCompositionEnd","leafPath","currentTextNode","withoutNormalizing","replace","distance","reverse","onCompositionUpdate","onCompositionStart","point","after","setSelection","insertNodes","onCopy","setFragmentData","onCut","onDragOver","onDragStart","voidMatch","voids","onDrop","draggedRange","findEventRange","onDragEnd","onFocus","onKeyDown","nativeEvent","isRTL","Hotkeys","maybeHistoryEditor","move","edge","collapse","currentNode","onPaste","domRange","leafEl","parentElement","getBoundingClientRect","bind","scrollIntoView","scrollMode","editable","slateNode","handler","shouldTreatEventAsHandled","isDefaultPrevented","isPropagationStopped","defaultPrevented","Key","isEditor","unshift","JSON","stringify","getRootNode","Document","ShadowRoot","isReadOnly","blur","preventScroll","rangeCount","options","targetEl","err","message","includes","closest","isContentEditable","insertFragmentData","insertTextData","originEvent","toDOMPoint","selector","querySelectorAll","attr","trueLength","parseInt","Math","min","max","domAnchor","domFocus","createRange","startNode","endNode","startEl","isStartAtZeroWidth","endEl","isEndAtZeroWidth","setStart","setEnd","domEl","clientX","x","clientY","y","rect","isPrev","left","top","before","caretRangeFromPoint","caretPositionFromPoint","offsetNode","toSlatePoint","nearestNode","nearestOffset","parentNode","textNode","voidNode","leafNode","contents","cloneContents","removals","call","removeChild","anchorOffset","focusOffset","collapsed","isForward","unhangRange","getDiffStart","charAt","getDiffEnd","prevLength","nextLength","prevChar","nextChar","getDiffOffsets","maxEnd","sliceText","offsets","diffText","removeText","combineInsertedText","insertedText","reduce","acc","getTextInsertion","isText","prevText","nextText","textDiff","textPath","normalizeTextInsertionRange","insertionRange","isSingleCharacterInsertion","nodes","characterBeforeAnchor","characterAfterAnchor","gatherMutationData","mutations","addedNodes","removedNodes","characterDataMutations","mutation","addedNode","removedNode","textInsertion","some","parentDOMNode","HTMLElement","isDeletion","_","isReplaceExpandedSelection","isTextInsertion","isRemoveLeafNodes","AndroidInputManager","restoreDOM","reconcileMutations","console","error","mutationData","replaceExpandedSelection","removeLeafNodes","insertion","useMutationObserver","callback","mutationObserver","MutationObserver","disconnect","observe","MUTATION_OBSERVER_CONFIG","childList","characterData","subtree","findClosestKnowSlateNode","useRestoreDom","receivedUserInput","mutatedNodes","Set","handleDOMMutation","add","clear","restore","mutated","values","nodesToRestore","filter","m","isParent","useTrackUserInput","animationFrameRef","onUserInput","characterDataOldValue","useAndroidInputManager","restoreDom","inputManager","timeoutId","isReconciling","clearTimeout","AndroidEditable","boundary","FocusedContext","useFocused","Slate","onChange","rest","setContext","isNodeList","assign","onContextChange","setIsFocused","fn","useEditor","doRectsIntersect","compareRect","middle","bottom","areRangesSameLine","range1","range2","rect1","rect2","findCurrentLineRange","parentRange","parentRangeBoundary","positions","right","floor","withReact","e","apply","parentBlockEntry","isBlock","parentBlockPath","parentElementRange","currentLineRange","matches","levels","common","newPath","edges","attach","trim","r","cloneRange","setEndAfter","zw","isNewline","span","appendChild","getFragment","encoded","btoa","encodeURIComponent","setAttribute","div","body","innerHTML","decoded","decodeURIComponent","atob","parsed","parse","insertFragment","lines","split","line","splitNodes","always","ReactDOM","unstable_batchedUpdates","DefaultEditable"],"mappings":"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"}